<Project Sdk="Microsoft.NET.Sdk.Web">
  
  <Import Project="..\common.props" />

  <PropertyGroup>
    <VersionPrefix>1.4.0</VersionPrefix>
    <!--<AspNetCoreHostingModel>OutOfProcess</AspNetCoreHostingModel>-->
    <UserSecretsId>aca35d68-2f97-4471-bcee-88a607e466f3</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <!--<PublishTrimmed>true</PublishTrimmed>-->
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <!-- workaround for https://github.com/dotnet/aspnetcore/issues/28643 -->
    <DefaultExcludesInProjectFolder>$(DefaultExcludesInProjectFolder);wwwroot\node_modules\**</DefaultExcludesInProjectFolder>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Grpc.AspNetCore.Server" Version="2.63.0" />
    <PackageReference Include="Grpc.Tools" Version="2.64.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="KdSoft.Logging" Version="1.1.3" />
    <PackageReference Include="KdSoft.Utils" Version="6.0.0" />
    <PackageReference Include="KdSoft.Utils.Portable" Version="4.2.1" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Certificate" Version="8.0.5" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.9.2" />
    <PackageReference Include="Microsoft.Extensions.Hosting.WindowsServices" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.0" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.20.1" />
    <PackageReference Include="OrchardCore.Localization.Core" Version="1.8.3" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="deploy/**">
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </Content>
    <Content Remove="Logs/**" />
    <Content Include="EventSinks/**/*" Exclude="EventSinks/**/*.json">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="wwwroot/lib/**" Exclude="wwwroot/lib/package*.json" />
    <Content Update="wwwroot/localize/**">
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
    </Content>
    <Content Update="wwwroot/package*.json">
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
    </Content>
    <Content Update="appSettings.Development.json">
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
    </Content>
    <Content Update="appsettings.Personal.json">
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
    </Content>
    <Content Update="authorization.json">
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\EtwEvents.CertificateUtils\EtwEvents.CertificateUtils.csproj" />
    <ProjectReference Include="..\EtwEvents.Client.Shared\EtwEvents.Client.Shared.csproj" />
    <ProjectReference Include="..\EventSinks\EtwEvents.gRPCSink\EtwEvents.gRPCSink.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="AgentCerts\" />
  </ItemGroup>

  <Target Name="CopyEventSinks" AfterTargets="PostBuildEvent">
    <ItemGroup>
      <BinFiles Include="$(SolutionDir)EventSinks/Deploy/**/*.*" />
    </ItemGroup>
    <RemoveDir Directories="$(ProjectDir)EventSinks" />
    <Copy SourceFiles="@(BinFiles)" DestinationFiles="@(BinFiles->'$(ProjectDir)EventSinks/%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
  </Target>

  <Target Name="PreBuild" BeforeTargets="PreBuildEvent" Condition="'$(Configuration)' == 'Release'">
    <Exec Command="npm install" WorkingDirectory="$(ProjectDir)wwwroot" />
    <Exec Command="npm run prepare-release" WorkingDirectory="$(ProjectDir)wwwroot" />
  </Target>
</Project>
