<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <VersionPrefix>1.1.0</VersionPrefix>
    <!--<AspNetCoreHostingModel>OutOfProcess</AspNetCoreHostingModel>-->
    <LangVersion>Latest</LangVersion>
    <Nullable>enable</Nullable>
    <AssemblyName>KdSoft.EtwEvents.AgentManager</AssemblyName>
    <RootNamespace>KdSoft.EtwEvents.AgentManager</RootNamespace>
    <UserSecretsId>aca35d68-2f97-4471-bcee-88a607e466f3</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <!--<PublishTrimmed>true</PublishTrimmed>-->
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Grpc.AspNetCore.Server" Version="2.47.0" />
    <PackageReference Include="Grpc.Tools" Version="2.47.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="KdSoft.Logging" Version="1.1.2" />
    <PackageReference Include="KdSoft.Utils.Portable" Version="4.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Certificate" Version="6.0.7" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.7" />
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="6.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Hosting.WindowsServices" Version="6.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="6.0.0" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.16.1" />
    <PackageReference Include="OrchardCore.Localization.Core" Version="1.4.0" />
  </ItemGroup>
  
  <ItemGroup>
    <Content Update="deploy/**/*">
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </Content>
    <Content Include="EventSinks/**/*" Exclude="EventSinks/**/*.json">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Update="wwwroot/node_modules/**/*;wwwroot/_tmp/**/*;wwwroot/localize/**/*">
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
    </Content>
    <Content Update="wwwroot/package*.json">
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
    </Content>
    <Content Update="appSettings.Development.json">
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\EtwEvents.Client.Shared\EtwEvents.Client.Shared.csproj" />
    <ProjectReference Include="..\EventSinks\EtwEvents.gRPCSink\EtwEvents.gRPCSink.csproj" />
  </ItemGroup>

  <!-- This seems to be the only way top clean the Publish directory before publishing -->
  <Target Name="ClearPublishDir" BeforeTargets="PrepareForPublish">
    <Message Importance="high" Text="Cleaning out publish directory..." />
    <RemoveDir Directories="$(PublishDir)" />
  </Target>

  <Target Name="CopyEventSinks" AfterTargets="PostBuildEvent">
    <ItemGroup>
      <BinFiles Include="$(SolutionDir)EventSinks/Deploy/**/*.*" />
    </ItemGroup>
    <RemoveDir Directories="$(ProjectDir)EventSinks" />
    <Copy SourceFiles="@(BinFiles)" DestinationFiles="@(BinFiles->'$(ProjectDir)EventSinks/%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
  </Target>
</Project>
