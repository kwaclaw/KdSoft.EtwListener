<Wix xmlns="http://wixtoolset.org/schemas/v4/wxs">
    <Fragment>

        <UI Id="WixUI_Custom">
            <DialogRef Id="ConfigDlg"/>
            <DialogRef Id="BrowseDlg" />
            <DialogRef Id="DiskCostDlg" />

            <!-- Based on
                https://github.com/wixtoolset/wix/blob/develop/src/ext/UI/wixlib/WixUI_FeatureTree.wxs
                and
                https://github.com/wixtoolset/wix/blob/develop/src/ext/UI/wixlib/WixUI_InstallDir.wxs
            -->
            <Publish Dialog="BrowseDlg" Control="OK" Event="DoAction" Value="WixUIValidatePath_X64" Order="3" Condition="NOT WIXUI_DONTVALIDATEPATH" />
            <Publish Dialog="BrowseDlg" Control="OK" Event="SpawnDialog" Value="InvalidDirDlg" Order="4" Condition="NOT WIXUI_DONTVALIDATEPATH AND WIXUI_INSTALLDIR_VALID&lt;&gt;&quot;1&quot;" />

            <Publish Dialog="LicenseAgreementDlg" Control="Next" Event="NewDialog" Value="ConfigDlg" Condition="LicenseAccepted = &quot;1&quot;" />

            <Publish Dialog="InstallDirDlg" Control="Back" Event="NewDialog" Value="ConfigDlg" />
            <Publish Dialog="InstallDirDlg" Control="Next" Event="SetTargetPath" Value="[WIXUI_INSTALLDIR]" Order="1" />
            <Publish Dialog="InstallDirDlg" Control="Next" Event="DoAction" Value="WixUIValidatePath_X64" Order="2" Condition="NOT WIXUI_DONTVALIDATEPATH" />
            <Publish Dialog="InstallDirDlg" Control="Next" Event="SpawnDialog" Value="InvalidDirDlg" Order="3" Condition="NOT WIXUI_DONTVALIDATEPATH AND WIXUI_INSTALLDIR_VALID&lt;&gt;&quot;1&quot;" />
            <Publish Dialog="InstallDirDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg" Order="4" Condition="WIXUI_DONTVALIDATEPATH OR WIXUI_INSTALLDIR_VALID=&quot;1&quot;" />
            <Publish Dialog="InstallDirDlg" Control="ChangeFolder" Property="_BrowseProperty" Value="[WIXUI_INSTALLDIR]" Order="1" />
            <Publish Dialog="InstallDirDlg" Control="ChangeFolder" Event="SpawnDialog" Value="BrowseDlg" Order="2" />

            <Publish Dialog="ConfigDlg" Control="Back" Event="NewDialog" Value="LicenseAgreementDlg" />
            <Publish Dialog="ConfigDlg" Control="Next" Property="_validateErrorTitle" Value="!(loc.ValidateRootCertsErrorTitle)" Order="1" />
            <Publish Dialog="ConfigDlg" Control="Next" Event="DoAction" Value="ValidateRootCertificates" Order="2" />
            <Publish Dialog="ConfigDlg" Control="Next" Property="_validateErrorTitle" Value="!(loc.ValidateClientCertErrorTitle)" Order="3" />
            <Publish Dialog="ConfigDlg" Control="Next" Event="DoAction" Value="ValidateClientCertificate" Order="4" Condition="ROOT_CERTIFICATES_VALID = &quot;1&quot;"/>
            <Publish Dialog="ConfigDlg" Control="Next" Event="NewDialog" Value="InstallDirDlg" Order="5" Condition="CLIENT_CERTIFICATE_VALID = &quot;1&quot; AND ROOT_CERTIFICATES_VALID = &quot;1&quot;"/>
            
            <Publish Dialog="ConfigDlg" Control="ChangeRootCerts" Property="_FileDlgFilter" Value="Certificates (*.cer)|*.cer" Order="1" />
            <Publish Dialog="ConfigDlg" Control="ChangeRootCerts" Property="_FileDglMultiSelect" Value="true" Order="2" />
            <Publish Dialog="ConfigDlg" Control="ChangeRootCerts" Property="_FileDlgTitle" Value="!(loc.SelectRootCerts)" Order="3" />
            <Publish Dialog="ConfigDlg" Control="ChangeRootCerts" Property="_FileNamesProperty" Value="ROOT_CERTIFICATES" Order="4" />
            <Publish Dialog="ConfigDlg" Control="ChangeRootCerts" Event="DoAction" Value="OpenFileDialog" Order="6" />
            <!-- We need a property re-assignment (with a true condition) so that the Edit control gets refreshed. -->
            <Publish Dialog="ConfigDlg" Control="ChangeRootCerts" Property="ROOT_CERTIFICATES" Value="[ROOT_CERTIFICATES]" Order="7" Condition="1 = 1" />
            <!--<Publish Dialog="ConfigDlg" Control="ChangeRootCerts" Property="_FileDglDir" Value="C:\Windows" Order="8" />-->

            <Publish Dialog="ConfigDlg" Control="ChangeClientCert" Property="_FileDlgFilter" Value="Certificates (*.p12;*.pfx)|*.p12;*.pfx" Order="1" />
            <!--<Publish Dialog="ConfigDlg" Control="ChangeClientCert" Property="_FileDglMultiSelect" Value="false" Order="2" />-->
            <Publish Dialog="ConfigDlg" Control="ChangeClientCert" Property="_FileDlgTitle" Value="!(loc.SelectClientCert)" Order="3" />
            <Publish Dialog="ConfigDlg" Control="ChangeClientCert" Property="_FileNamesProperty" Value="CLIENT_CERTIFICATE" Order="4" />
            <Publish Dialog="ConfigDlg" Control="ChangeClientCert" Event="DoAction" Value="OpenFileDialog" Order="6" />
            <!-- We need a property re-assignment (with a true condition) so that the Edit control gets refreshed. -->
            <Publish Dialog="ConfigDlg" Control="ChangeClientCert" Property="CLIENT_CERTIFICATE" Value="[CLIENT_CERTIFICATE]" Order="7" Condition="1 = 1" />
            <!--<Publish Dialog="ConfigDlg" Control="ChangeClientCert" Property="_FileDglDir" Value="C:\Windows" Order="8" />-->
            
            <Publish Dialog="ConfigDlg" Control="ClientCertPwd" Property="CLIENT_CERTIFICATE_PASSWORD" Value="[CLIENT_CERTIFICATE_PASSWORD]" Order="1" />

            <Publish Dialog="ConfigDlg" Control="ChangeSettingsOverride" Property="_FileDlgFilter" Value="JSON Files (*.json)|*.json" Order="1" />
            <!--<Publish Dialog="ConfigDlg" Control="ChangeClientCert" Property="_FileDglMultiSelect" Value="false" Order="2" />-->
            <Publish Dialog="ConfigDlg" Control="ChangeSettingsOverride" Property="_FileDlgTitle" Value="!(loc.SelectSettingsOverride)" Order="3" />
            <Publish Dialog="ConfigDlg" Control="ChangeSettingsOverride" Property="_FileNamesProperty" Value="SETTINGS_OVERRIDE" Order="4" />
            <Publish Dialog="ConfigDlg" Control="ChangeSettingsOverride" Event="DoAction" Value="OpenFileDialog" Order="6" />
            <!-- We need a property re-assignment (with a true condition) so that the Edit control gets refreshed. -->
            <Publish Dialog="ConfigDlg" Control="ChangeSettingsOverride" Property="SETTINGS_OVERRIDE" Value="[SETTINGS_OVERRIDE]" Order="7" Condition="1 = 1" />
            <!--<Publish Dialog="ConfigDlg" Control="ChangeSettingsOverride" Property="_FileDglDir" Value="C:\Windows" Order="8" />-->
            
            <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="InstallDirDlg" Order="1" Condition="NOT Installed" />

            <Property Id="ARPNOMODIFY" Value="1" />
        </UI>

        <Property Id="MANAGER_URL" Value="https://agent-manager.mycompany.com" />
        <Property Id="SERVICE_ACCOUNT" Value="LocalSystem" />

        <!-- Note: You must author a registry component somewhere in your installer to persist the property for later retrieval
        Example:
        ...
        <Component Id='RememberCustom' Guid='{????????-????-????-????-????????????}' KeyPath='yes' Permanent='yes'>
          <RegistryValue Root='HKLM' Key='SOFTWARE\CompanyName\ProductName' Name='Custom' Type='string' Value='[CUSTOM]'/>
        </Component>
        ...
        -->

        <!-- Attempt to retrieve previously persisted property -->
        <!--<Property Id="FINDCUSTOM" Secure="yes">
            <RegistrySearch Id="CustomerNumber" Root="HKLM" Key="SOFTWARE\CompanyName\ProductName" Name="Custom" Type="raw" />
        </Property>-->

        <!-- Assign default value if retrieval failed -->
        <!--<SetProperty Id="FINDCUSTOM" Value="default value" After="AppSearch" Sequence="first" Condition="Not FINDCUSTOM" />-->

        <!-- Assign retrieved / defaulted value to actual property if it doesn't already have a value -->
        <!--<SetProperty Id="CUSTOM" Value="[FINDCUSTOM]" After="SetFINDCUSTOM" Sequence="first" Condition="Not CUSTOM" />-->
    </Fragment>
</Wix>
