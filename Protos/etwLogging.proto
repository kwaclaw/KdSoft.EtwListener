syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/duration.proto";
import "etwMessages.proto";

package KdSoft.EtwLogging;

// The EtwListener service definition.
service EtwListener {
  rpc OpenSession (OpenEtwSession) returns (EnableProvidersResult);
  rpc CloseSession (CloseEtwSession) returns (google.protobuf.Empty);
  rpc GetActiveSessionNames (google.protobuf.Empty) returns (SessionNamesResult);
  rpc GetSession (google.protobuf.StringValue) returns (EtwSession);
  rpc EnableProviders (EnableProvidersRequest) returns (EnableProvidersResult);
  rpc DisableProviders (DisableProvidersRequest) returns (google.protobuf.Empty);
  rpc GetEvents (EtwEventRequest) returns (stream EtwEventBatch);
  rpc StopEvents (google.protobuf.StringValue) returns (google.protobuf.Empty);
  rpc SetCSharpFilter(SetFilterRequest) returns (BuildFilterResult);
  rpc TestCSharpFilter(TestFilterRequest) returns (BuildFilterResult);
}

// The request message containing the session name.
message OpenEtwSession {
  string name = 1;
  bool try_attach = 2;
  google.protobuf.Duration life_time = 3;
  // provider_settings are ignored when try_attach = true
  repeated ProviderSetting provider_settings = 4;
}

message CloseEtwSession {
  string name = 1;
}

message SessionNamesResult {
  repeated string session_names = 1;
}

message EtwSession {
  string session_name = 1;
  bool is_created = 2;
  bool is_started = 3;
  bool is_stopped = 4;
  repeated ProviderSetting enabled_providers = 5;
}

message EnableProvidersRequest {
  string session_name = 1;
  repeated ProviderSetting provider_settings = 2;
}

message EnableProvidersResult {
  repeated ProviderSettingResult results = 1;
}

message DisableProvidersRequest {
  string session_name = 1;
  repeated string provider_names = 2;
}

message ProviderSettingResult {
  string name = 1;
  bool restarted = 2;
}

message EtwEventRequest {
  string session_name = 1;
  int32 batch_size = 2;
  google.protobuf.Duration max_write_delay = 3;
}

message SetFilterRequest {
  string session_name = 1;
  string filter_template = 2;
  repeated string filter_parts = 3;
}

message TestFilterRequest {
  string filter_template = 1;
  repeated string filter_parts = 2;
}



